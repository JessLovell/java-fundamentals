import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static int[] roll(int rolls) {
        int[] arr = new int[rolls];
        Random rand = new Random();

        for (int i = 0; i < rolls; i++){
            arr[i] = rand.nextInt(6) + 1;
        }
        return arr;
    }

    public static boolean containsDuplicates(int[] arr) {

        for (int i = 0; i < arr.length; i++){
            for (int j = 0; j < arr.length; j++){
                if(i != j) {
                    if (arr[i] == arr[j]) {
                        return true;
                    }
                }
            }
        }
        return false;
    }

    public static int calculateAverage(int[] arr){

        int total = 0;
        for (int item : arr) {
            total += item;
        }
        return total/arr.length;
    }

    public static int[] calculateArrAverage(int[][] arr){

        int lowest = calculateAverage(arr[0]);
        int lowIndex = 0;
        int average = 0;

        for (int i = 0; i < arr.length; i++){
            average = calculateAverage(arr[i]);
            if (average < lowest) {
                lowest = average;
                lowIndex = i;
            }
        }
        return arr[lowIndex];
    }

    public static void weatherData(int[][] array) {

        HashSet<Integer> set = new HashSet<>();

        for (int i  = 0; i < array.length; i++) {
            for (int item : array[i]) {
                set.add(item);
            }
        }

        System.out.println("The Low was: " + Collections.min(set));
        System.out.println("The high was: " + Collections.max(set));

        for (int i = Collections.min(set); i < Collections.max(set); i++){
            if (!set.contains(i)){
                System.out.println("Never saw: " + i);
            }
        }
    }

    public static String tally(List<String> list) {

        HashMap<String, Integer> map = new HashMap<>();

        // populate the map
        for (String item : list) {
            map.put(item, 0);
        }

        //count the votes and find max
        int max = 0;
        String mostVotes = "";
        for (String item : list) {
            if(map.get(item) > max){
                max = map.get(item) + 1;
                mostVotes = item;
            }
            map.put(item, map.get(item) + 1);
        }

        return mostVotes;
    }

    public static void main (String[] args) {

        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Hedge");

        tally(votes);
    }
}
